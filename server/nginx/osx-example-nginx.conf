# Example Nginx config file for MacOS, deployed at /opt/homebrew/etc/nginx/nginx.conf
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8081;
        server_name  localhost;
	    autoindex on;
        access_log  /var/log/nginx/access.log;
        error_log  /var/log/nginx/error.log  error;

        location / {
                proxy_pass http://localhost:3000;
                proxy_set_header                X-Localhost true;
                proxy_set_header                X-Real-IP $remote_addr;
                proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_redirect                  off;
                proxy_cache                     off;
                # Headers for client browser NOCACHE + CORS origin filter 
                add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                expires off;
                add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header    'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
                allow all;
        }

        location ~ ^/(preparation|preparations) {
                proxy_pass http://localhost:7001;
                proxy_set_header                X-Localhost true;
                proxy_set_header                X-Real-IP $remote_addr;
                proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_redirect                  off;
                proxy_cache                     off;
                # Headers for client browser NOCACHE + CORS origin filter 
                add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                expires off;
                add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header    'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
                allow all;
        }

        location ~ ^/(ls|cp|chainheight) {
                proxy_pass http://localhost:8181;
                proxy_set_header                X-Localhost true;
                proxy_set_header                X-Real-IP $remote_addr;
                proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_redirect                  off;
                proxy_cache                     off;
                # Headers for client browser NOCACHE + CORS origin filter 
                add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                expires off;
                add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header    'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
                allow all;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    include servers/*;
}
